@page "/editproduct/{productId}"

@inject NavigationManager NavigationManager
@inject IAddProductUseCases AddProductUseCases
@inject IGetProductByIdUseCases GetProductByIdUseCases
@inject IEditProductUseCases EditProductUseCases
@inject IViewCategoriesUseCase ViewCategoriesUseCase
<h3>編輯 商品 </h3>

@if (product != null)
{
    <EditForm Model="product" class="form" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="category">種類</label>
            <select class="custom-select" id="category" @bind="product.CategoryId">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="name">名稱</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="price">價格</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="qt">存量</label>
            <InputNumber id="qt" @bind-Value="@product.Quantity" @bind-Value:format="F3" class="form-control"></InputNumber>
        </div>
        <div style="float:right">
            <button type="submit" class="btn btn-primary"> 保存 </button>
            <button type="button" class="btn btn-primary" @onclick="OnCancel">回上頁</button>
        </div>
    </EditForm>
}


@code {
    [Parameter]
    public string ProductId { get; set; }
    private Product product;
    private IEnumerable<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Excute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(this.ProductId, out int iproductid))
        {
            var diffpdt = GetProductByIdUseCases.Excute(iproductid);
            this.product = new Product {
                ProductId = diffpdt.ProductId,
                CategoryId = diffpdt.CategoryId,
                Name = diffpdt.Name,
                Quantity = diffpdt.Quantity,
                Price = diffpdt.Price
            };
        }

    }
    private void OnValidSubmit()
    {
        EditProductUseCases.Execute(this.product);
        NavigationManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}

